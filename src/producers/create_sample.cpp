#include <flatbuffers/flatbuffers.h>
#include "telemetry_generated.h"
#include <fstream>

int main() {
  flatbuffers::FlatBufferBuilder builder;

  auto id = builder.CreateString("device-123");

  auto s1_id = builder.CreateString("temp");
  auto s1_unit = builder.CreateString("C");
  auto s1 = telemetry::CreateSensor(builder, s1_id, 23.5, s1_unit);

  auto s2_id = builder.CreateString("pressure");
  auto s2_unit = builder.CreateString("kPa");
  auto s2 = telemetry::CreateSensor(builder, s2_id, 101.3, s2_unit);

  std::vector<flatbuffers::Offset<telemetry::Sensor>> sensors_vec = {s1, s2};
  auto sensors = builder.CreateVector(sensors_vec);

  auto status = builder.CreateString("OK");

  telemetry::TelemetryBuilder tb(builder);
  tb.add_timestamp(1630000000ULL);
  tb.add_device_id(id);
  tb.add_sensors(sensors);
  tb.add_status(status);
  auto root = tb.Finish();
  builder.Finish(root);

  // write to file
  std::ofstream out("telemetry.bin", std::ios::binary);
  out.write(reinterpret_cast<const char*>(builder.GetBufferPointer()), builder.GetSize());
  out.close();

  // Also write the bfbs (schema binary) is generated by flatc during build

  return 0;
}
